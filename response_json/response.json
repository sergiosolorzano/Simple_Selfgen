{"module": "import sys\nimport unittest\nclass TestProgram(unittest.TestCase):\n    def test_invalid_num_args(self):\n        with self.assertRaises(SystemExit):\n            program(['1'])\n    def test_invalid_args(self):\n        with self.assertRaises(SystemExit):\n            program(['1', 'a', 'sum'])\n    def test_invalid_operation(self):\n        with self.assertRaises(SystemExit):\n            program(['1', '2', 'power'])\n    def test_division_by_zero(self):\n        with self.assertRaises(SystemExit):\n            program(['1', '0', 'divide'])\n    def test_sum(self):\n        self.assertEqual(program(['1', '2', 'sum']), 3)\n    def test_subtract(self):\n        self.assertEqual(program(['1', '2', 'subtract']), -1)\n    def test_multiply(self):\n        self.assertEqual(program(['2', '3', 'multiply']), 6)\n    def test_divide(self):\n        self.assertEqual(program(['6', '3', 'divide']), 2)\n\ndef program(args):\n    if len(args) != 3:\n        print('Error: Invalid number of arguments. Usage: python module.py num1 num2 operation')\n        sys.exit()\n    try:\n        num1 = float(args[0])\n        num2 = float(args[1])\n    except ValueError:\n        print('Error: Invalid argument(s). Numbers expected.')\n        sys.exit()\n    operation = args[2]\n    if operation == 'sum':\n        result = num1 + num2\n    elif operation == 'subtract':\n        result = num1 - num2\n    elif operation == 'multiply':\n        result = num1 * num2\n    elif operation == 'divide':\n        if num2 == 0:\n            print('Error: Division by zero.')\n            sys.exit()\n        result = num1 / num2\n    else:\n        print('Error: Invalid operation. Choose between sum, subtract, multiply or divide.')\n        sys.exit()\n    print(result)\n", "unittest_cli_1": "python -m unittest module.TestProgram.test_invalid_num_args", "unittest_cli_2": "python -m unittest module.TestProgram.test_invalid_args", "unittest_cli_3": "python -m unittest module.TestProgram.test_invalid_operation", "unittest_cli_4": "python -m unittest module.TestProgram.test_division_by_zero", "unittest_cli_5": "python -m unittest module.TestProgram.test_sum", "unittest_cli_6": "python -m unittest module.TestProgram.test_subtract", "unittest_cli_7": "python -m unittest module.TestProgram.test_multiply", "unittest_cli_8": "python -m unittest module.TestProgram.test_divide"}