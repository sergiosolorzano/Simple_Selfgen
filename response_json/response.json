{"module": "#!/usr/bin/env python3\n\nimport argparse\nimport logging\nimport unittest\n\nlogging.basicConfig(filename='/home/sergio/Simple_Selfgen/project/module.log', level=logging.DEBUG, format='%(asctime)s:%(levelname)s:%(lineno)d:%(message)s')\n\ndef program(num1, num2, operation):\n    try:\n        if operation == 'sum':\n            result = num1 + num2\n        elif operation == 'subtract':\n            result = num1 - num2\n        elif operation == 'multiply':\n            result = num1 * num2\n        elif operation == 'divide':\n            result = num1 / num2\n        return result\n    except Exception as e:\n        print(e)\n        logging.error(e, exc_info=True)\n\nclass TestProgram(unittest.TestCase):\n    def test_program_sum(self):\n        self.assertEqual(program(2, 3, 'sum'), 5)\n\n    def test_program_subtract(self):\n        self.assertEqual(program(5, 3, 'subtract'), 2)\n\n    def test_program_multiply(self):\n        self.assertEqual(program(2, 3, 'multiply'), 6)\n\n    def test_program_divide(self):\n        self.assertEqual(program(6, 3, 'divide'), 2)\n\nif __name__ == '__main__':\n    parser = argparse.ArgumentParser(description='A calculator that performs addition, subtraction, multiplication, and division operations on two numbers.')\n    parser.add_argument('num1', type=float, help='The first number')\n    parser.add_argument('num2', type=float, help='The second number')\n    parser.add_argument('operation', type=str, help='The arithmetic operation to perform', choices=['sum', 'subtract', 'multiply', 'divide'])\n    parser.add_argument('-v', '--version', action='version', version='%(prog)s 1.0')\n    args = parser.parse_args()\n    try:\n        program(args.num1, args.num2, args.operation)\n        logging.info('User input: num1=%s, num2=%s, operation=%s', args.num1, args.num2, args.operation)\n    except Exception as e:\n        print(e)\n        logging.error(e, exc_info=True)\n", "unittest_cli_1": "python3 -m unittest module_utest.TestProgram.test_program_sum", "unittest_cli_2": "python3 -m unittest module_utest.TestProgram.test_program_subtract", "unittest_cli_3": "python3 -m unittest module_utest.TestProgram.test_program_multiply", "unittest_cli_4": "python3 -m unittest module_utest.TestProgram.test_program_divide"}