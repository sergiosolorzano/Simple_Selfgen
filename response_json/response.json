{"module": "import sys\nimport unittest\n\ndef add(num1, num2):\n    return num1 + num2\n\ndef subtract(num1, num2):\n    return num1 - num2\n\ndef multiply(num1, num2):\n    return num1 * num2\n\ndef divide(num1, num2):\n    return num1 / num2\n\ndef program(num1, num2, operation):\n    if operation == 'sum':\n        result = add(num1, num2)\n    elif operation == 'subtract':\n        result = subtract(num1, num2)\n    elif operation == 'multiply':\n        result = multiply(num1, num2)\n    elif operation == 'divide':\n        result = divide(num1, num2)\n    else:\n        print('Invalid operation chosen')\n        sys.exit()\n    print(result)\n\n\nclass TestProgram(unittest.TestCase):\n    def test_add(self):\n        self.assertEqual(add(2, 3), 5)\n\n    def test_subtract(self):\n        self.assertEqual(subtract(5, 3), 2)\n\n    def test_multiply(self):\n        self.assertEqual(multiply(2, 3), 6)\n\n    def test_divide(self):\n        self.assertEqual(divide(6, 3), 2)\n\n    def test_invalid_operation(self):\n        with self.assertRaises(SystemExit):\n            program(2, 3, 'invalid')\n\n    def test_sum_operation(self):\n        with self.assertLogs() as cm:\n            program(2, 3, 'sum')\n            self.assertEqual(cm.output, ['5\\n'])\n\n    def test_subtract_operation(self):\n        with self.assertLogs() as cm:\n            program(5, 3, 'subtract')\n            self.assertEqual(cm.output, ['2\\n'])\n\n    def test_multiply_operation(self):\n        with self.assertLogs() as cm:\n            program(2, 3, 'multiply')\n            self.assertEqual(cm.output, ['6\\n'])\n\n    def test_divide_operation(self):\n        with self.assertLogs() as cm:\n            program(6, 3, 'divide')\n            self.assertEqual(cm.output, ['2.0\\n'])\n\n\nif __name__ == '__main__':\n    unittest.main()", "unittest_cli_1": "python -m unittest module_utest.TestProgram.test_add", "unittest_cli_2": "python -m unittest module_utest.TestProgram.test_subtract", "unittest_cli_3": "python -m unittest module_utest.TestProgram.test_multiply", "unittest_cli_4": "python -m unittest module_utest.TestProgram.test_divide", "unittest_cli_5": "python -m unittest module_utest.TestProgram.test_invalid_operation", "unittest_cli_6": "python -m unittest module_utest.TestProgram.test_sum_operation", "unittest_cli_7": "python -m unittest module_utest.TestProgram.test_subtract_operation", "unittest_cli_8": "python -m unittest module_utest.TestProgram.test_multiply_operation", "unittest_cli_9": "python -m unittest module_utest.TestProgram.test_divide_operation"}
