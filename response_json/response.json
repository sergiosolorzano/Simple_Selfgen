{"module": "import argparse\nimport sys\nimport logging\nimport unittest\ndef sum(a, b):\n    return a + b\n\ndef subtract(a, b):\n    return a - b\n\ndef multiply(a, b):\n    return a * b\n\ndef divide(a, b):\n    return a / b\n\ndef program(num1, num2, operation, log):\n    if operation == 'sum':\n        result = sum(num1, num2)\n    elif operation == 'subtract':\n        result = subtract(num1, num2)\n    elif operation == 'multiply':\n        result = multiply(num1, num2)\n    elif operation == 'divide':\n        result = divide(num1, num2)\n    else:\n        logging.error('Invalid operation')\n        sys.exit()\n    if log:\n        logging.basicConfig(filename='module.log', level=logging.DEBUG, format='%(asctime)s - %(levelname)s - %(message)s - %(lineno)d')\n        logging.info('Operation: {} {} {} = {}'.format(num1, operation, num2, result))\n    return result\n\nclass TestProgram(unittest.TestCase):\n    def test_sum(self):\n        self.assertEqual(sum(2, 3), 5)\n    def test_subtract(self):\n        self.assertEqual(subtract(5, 3), 2)\n    def test_multiply(self):\n        self.assertEqual(multiply(2, 3), 6)\n    def test_divide(self):\n        self.assertEqual(divide(6, 3), 2)\n    def test_program_sum(self):\n        self.assertEqual(program(2, 3, 'sum', False), 5)\n    def test_program_subtract(self):\n        self.assertEqual(program(5, 3, 'subtract', False), 2)\n    def test_program_multiply(self):\n        self.assertEqual(program(2, 3, 'multiply', False), 6)\n    def test_program_divide(self):\n        self.assertEqual(program(6, 3, 'divide', False), 2)\n    def test_program_invalid_operation(self):\n        with self.assertRaises(SystemExit):\n            program(2, 3, 'invalid', False)\n    def test_program_logging(self):\n        with self.assertLogs('module.log', level='INFO') as cm:\n            program(2, 3, 'sum', True)\n            self.assertIn('Operation: 2 sum 3 = 5', cm.output[0])\n\nif __name__ == '__main__':\n    unittest.main()", "unittest_cli_1": "python -m unittest module.TestProgram.test_sum"}